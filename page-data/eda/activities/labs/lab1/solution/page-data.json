{"componentChunkName":"component---src-pages-eda-activities-labs-lab-1-solution-mdx","path":"/eda/activities/labs/lab1/solution/","result":{"pageContext":{"frontmatter":{"title":"Event-Driven Architecture Lab Solution 1 - Getting Started with Producing & Consuming","description":"Lab activities associated with producing and consuming messages from an IBM Event Streams on Cloud instance, to be used with event-driven architecture enablement."},"relativePagePath":"/eda/activities/labs/lab1/solution.mdx","titleType":"page","MdxNode":{"id":"1beef645-4e1e-53ad-ba66-05f4125d142b","children":[],"parent":"f3079e81-1b40-5329-89e0-845c46ceeb34","internal":{"content":"---\ntitle: Event-Driven Architecture Lab Solution 1 - Getting Started with Producing & Consuming\ndescription: Lab activities associated with producing and consuming messages from an IBM Event Streams on Cloud instance, to be used with event-driven architecture enablement.\n---\n\n## Solution - NodeJS\n\nUtilize https://github.com/ibm-messaging/event-streams-samples/tree/master/kafka-nodejs-console-sample/docs as needed for pointers.\n\n1. `git clone https://github.com/ibm-messaging/event-streams-samples.git`\n2. `cd event-streams-samples/kafka-nodejs-console-sample`\n3. Acquire the `Bootstrap server` information from the **Connect to this service** dialog on the **Manage** tab of the your IBM Event Streams on Cloud instance and save it to an environment variable named BOOTSTRAP_NODES.\n4. Acquire the `API Key` from the **Service Credentials** tab of your IBM Event Streams on Cloud instance and save it to an environment variable named API_KEY.\n5. `docker build -t eventstreams-samples-nodejs .`\n6. `docker run --rm -it eventstreams-samples-nodejs:latest  \"${BOOTSTRAP_NODES}\" \"${API_KEY}\" \"/etc/ssl/certs\"`\n\n## Solution - Java\n\nUtilize https://github.com/ibm-messaging/event-streams-samples/tree/master/kafka-java-console-sample/docs as needed for pointers.\n\n1. `git clone https://github.com/ibm-messaging/event-streams-samples.git`\n2. `cd event-streams-samples/kafka-java-console-sample`\n3. Acquire the `Bootstrap server` information from the **Connect to this service** dialog on the **Manage** tab of the your IBM Event Streams on Cloud instance and save it to an environment variable named BOOTSTRAP_NODES.\n4. Acquire the `API Key` from the **Service Credentials** tab of your IBM Event Streams on Cloud instance and save it to an environment variable named API_KEY.\n5. `docker build -t eventstreams-samples-java .`\n6. `docker run --rm -it eventstreams-samples-java:latest  \"${BOOTSTRAP_NODES}\" \"${API_KEY}\"`\n","type":"Mdx","contentDigest":"bb3e657d2951a20c1efc55b9d0063b74","counter":551,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Event-Driven Architecture Lab Solution 1 - Getting Started with Producing & Consuming","description":"Lab activities associated with producing and consuming messages from an IBM Event Streams on Cloud instance, to be used with event-driven architecture enablement."},"exports":{},"rawBody":"---\ntitle: Event-Driven Architecture Lab Solution 1 - Getting Started with Producing & Consuming\ndescription: Lab activities associated with producing and consuming messages from an IBM Event Streams on Cloud instance, to be used with event-driven architecture enablement.\n---\n\n## Solution - NodeJS\n\nUtilize https://github.com/ibm-messaging/event-streams-samples/tree/master/kafka-nodejs-console-sample/docs as needed for pointers.\n\n1. `git clone https://github.com/ibm-messaging/event-streams-samples.git`\n2. `cd event-streams-samples/kafka-nodejs-console-sample`\n3. Acquire the `Bootstrap server` information from the **Connect to this service** dialog on the **Manage** tab of the your IBM Event Streams on Cloud instance and save it to an environment variable named BOOTSTRAP_NODES.\n4. Acquire the `API Key` from the **Service Credentials** tab of your IBM Event Streams on Cloud instance and save it to an environment variable named API_KEY.\n5. `docker build -t eventstreams-samples-nodejs .`\n6. `docker run --rm -it eventstreams-samples-nodejs:latest  \"${BOOTSTRAP_NODES}\" \"${API_KEY}\" \"/etc/ssl/certs\"`\n\n## Solution - Java\n\nUtilize https://github.com/ibm-messaging/event-streams-samples/tree/master/kafka-java-console-sample/docs as needed for pointers.\n\n1. `git clone https://github.com/ibm-messaging/event-streams-samples.git`\n2. `cd event-streams-samples/kafka-java-console-sample`\n3. Acquire the `Bootstrap server` information from the **Connect to this service** dialog on the **Manage** tab of the your IBM Event Streams on Cloud instance and save it to an environment variable named BOOTSTRAP_NODES.\n4. Acquire the `API Key` from the **Service Credentials** tab of your IBM Event Streams on Cloud instance and save it to an environment variable named API_KEY.\n5. `docker build -t eventstreams-samples-java .`\n6. `docker run --rm -it eventstreams-samples-java:latest  \"${BOOTSTRAP_NODES}\" \"${API_KEY}\"`\n","fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/learning-cloudnative-101/src/pages/eda/activities/labs/lab1/solution.mdx"}}}}