(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{syDs:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return s}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var o=n("7ljp"),a=n("013z");n("qKvR");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var l={},i={_frontmatter:l},b=a.a;function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(o.b)(b,r({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",null,"Problem"),Object(o.b)("p",null,"Your commander has a simple data process that is run periodically to check status. They would like to stop doing this manually in order to save time, so you have been asked to implement a cron job in the Kubernetes cluster to run this process. "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Create a cron job called xwing-cronjob using the ",Object(o.b)("inlineCode",{parentName:"li"},"ibmcase/xwing-status:1.0")," image. "),Object(o.b)("li",{parentName:"ul"},"Have the job run every second minute with the following cron expression: ",Object(o.b)("inlineCode",{parentName:"li"},"*/2 * * * *"),"."),Object(o.b)("li",{parentName:"ul"},"Pass the argument ",Object(o.b)("inlineCode",{parentName:"li"},"/usr/sbin/xwing-status.sh")," to the container.")),Object(o.b)("h2",null,"Verification"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Run ",Object(o.b)("inlineCode",{parentName:"li"},"kubectl get cronjobs.batch")," and ",Object(o.b)("inlineCode",{parentName:"li"},"LAST-SCHEDULE")," to see last time it ran"),Object(o.b)("li",{parentName:"ul"},"From a bash shell, run the following to see the logs for all jobs:")),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),'jobs=( $(kubectl get jobs --no-headers -o custom-columns=":metadata.name") )\necho -e "Job \\t\\t\\t\\t Pod \\t\\t\\t\\t\\tLog"\nfor job in "${jobs[@]}"\ndo\n   pod=$(kubectl get pods -l job-name=$job --no-headers -o custom-columns=":metadata.name")\n   echo -en "$job \\t $pod \\t"\n   kubectl logs $pod\ndone\n')))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-kubernetes-activities-labs-lab-7-index-mdx-54338b5fd538f7cb90e9.js.map