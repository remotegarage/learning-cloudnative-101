(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{R4EZ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return b}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var a=n("7ljp"),r=n("013z");n("qKvR");function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i={},o={_frontmatter:i},c=r.a;function b(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(c,l({},o,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",null,"Problem"),Object(a.b)("p",null,"We have a ",Object(a.b)("inlineCode",{parentName:"p"},"jedi-deployment")," and ",Object(a.b)("inlineCode",{parentName:"p"},"yoda-deployment")," that need to communicate with others.  The ",Object(a.b)("inlineCode",{parentName:"p"},"jedi")," needs to talk to the world(outside the cluster), while ",Object(a.b)("inlineCode",{parentName:"p"},"yoda")," only needs to talk to jedi council(others in the cluster)."),Object(a.b)("h2",null,"Your Task"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Examine the two deployments, and create two services that meet the following criteria:")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"jedi-svc")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"The service name is ",Object(a.b)("inlineCode",{parentName:"li"},"jedi-svc"),"."),Object(a.b)("li",{parentName:"ul"},"The service exposes the pod replicas managed by the deployment named ",Object(a.b)("inlineCode",{parentName:"li"},"jedi-deployment"),"."),Object(a.b)("li",{parentName:"ul"},"The service listens on port ",Object(a.b)("inlineCode",{parentName:"li"},"80")," and its targetPort matches the port exposed by the pods."),Object(a.b)("li",{parentName:"ul"},"The service type is ",Object(a.b)("inlineCode",{parentName:"li"},"NodePort"),".")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"yoda-svc")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"The service name is ",Object(a.b)("inlineCode",{parentName:"li"},"yoda-svc"),"."),Object(a.b)("li",{parentName:"ul"},"The service exposes the pod replicas managed by the deployment named ",Object(a.b)("inlineCode",{parentName:"li"},"yoda-deployment"),"."),Object(a.b)("li",{parentName:"ul"},"The service listens on port ",Object(a.b)("inlineCode",{parentName:"li"},"80")," and its targetPort matches the port exposed by the pods."),Object(a.b)("li",{parentName:"ul"},"The service type is ",Object(a.b)("inlineCode",{parentName:"li"},"ClusterIP"),".")),Object(a.b)("h3",null,"Setup environment:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{}),"kubectl apply -f https://gist.githubusercontent.com/csantanapr/87df4292e94441617707dae5de488cf4/raw/cb515f7bae77a3f0e76fdc7f6aa0f4e89cc5fec7/lab-8-service-setup.yaml\n")))}b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-kubernetes-activities-labs-lab-8-index-mdx-f41e277e3593aa2897fc.js.map