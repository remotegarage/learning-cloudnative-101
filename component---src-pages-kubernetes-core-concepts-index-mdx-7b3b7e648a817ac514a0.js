(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{zak7:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return m}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var b=n("7ljp"),a=n("013z");n("qKvR");function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var b in n)Object.prototype.hasOwnProperty.call(n,b)&&(e[b]=n[b])}return e}).apply(this,arguments)}var r={},p=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(b.b)("div",t)}},o=p("AnchorLinks"),s=p("AnchorLink"),l=p("Tabs"),i=p("Tab"),u={_frontmatter:r},j=a.a;function m(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,b,a={},c=Object.keys(e);for(b=0;b<c.length;b++)n=c[b],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(b.b)(j,c({},u,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)(o,{mdxType:"AnchorLinks"},Object(b.b)(s,{mdxType:"AnchorLink"},"Kubernetes API Primitives"),Object(b.b)(s,{mdxType:"AnchorLink"},"Creating Pods"),Object(b.b)(s,{mdxType:"AnchorLink"},"Namespaces")),Object(b.b)("h1",null,"Kubernetes API Primitives"),Object(b.b)("p",null,"Kubernetes API primitive, also known as Kubernetes objects, are the basic building blocks of any application running in Kubernetes"),Object(b.b)("p",null,"Examples:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"Pod"),Object(b.b)("li",{parentName:"ul"},"Node"),Object(b.b)("li",{parentName:"ul"},"Service"),Object(b.b)("li",{parentName:"ul"},"ServiceAccount")),Object(b.b)("p",null,"Two primary members"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"Spec, desired state"),Object(b.b)("li",{parentName:"ul"},"Status, current state")),Object(b.b)("h2",null,"Resources"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"OpenShift")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-using.html"}),"Pods")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://docs.openshift.com/container-platform/4.3/nodes/nodes/nodes-nodes-viewing.html"}),"Nodes"))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"IKS")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/"}),"Objects")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://kubernetes.io/docs/tutorials/kubernetes-basics/"}),"Kube Basics"))),Object(b.b)("h2",null,"References"),Object(b.b)(l,{mdxType:"Tabs"},Object(b.b)(i,{label:"OpenShift",mdxType:"Tab"},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Prints all API Resources")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc api-resources\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Prints all API Resources with their verbs.")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc api-resources -o wide\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Prints all API Resources names only")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc api-resources -o name\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Explain the Resource specification")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc explain Pod.spec\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Getting a list of specific objects")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc get nodes,ns,po,deploy,svc\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Describing the resources")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc describe node \n"))),Object(b.b)(i,{label:"IKS",mdxType:"Tab"},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Prints all API Resources")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl api-resources\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Prints all API Resources with their verbs.")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl api-resources -o wide\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Prints all API Resources names only")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl api-resources -o name\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Explain the Resource specification")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl explain Pod.spec\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Getting a list of specific objects")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl get nodes,ns,po,deploy,svc\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Describing the resources")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl describe node\n")))),Object(b.b)("h1",null,"Creating Pods"),Object(b.b)("p",null,"A Pod is the basic execution unit of a Kubernetes application–the smallest and simplest unit in the Kubernetes object model that you create or deploy. A Pod represents processes running on your Cluster."),Object(b.b)("p",null,"A Pod encapsulates an application’s container (or, in some cases, multiple containers), storage resources, a unique network IP, and options that govern how the container(s) should run. A Pod represents a unit of deployment: a single instance of an application in Kubernetes, which might consist of either a single container or a small number of containers that are tightly coupled and that share resources."),Object(b.b)("h2",null,"Resources"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"OpenShift")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-using.html"}),"About Pods")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-configuring.html"}),"Cluster Configuration for Pods")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-autoscaling.html"}),"Pod Autoscaling"))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"IKS")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/"}),"Pod Overview")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/"}),"Pod Lifecycle")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod/"}),"Pod Usage"))),Object(b.b)("h2",null,"References"),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{className:"language-yaml"}),'apiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp-pod\n  labels:\n    app: myapp\nspec:\n  containers:\n    - name: myapp-container\n      image: busybox\n      command: ["sh", "-c", "echo Hello Kubernetes! && sleep 3600"]\n')),Object(b.b)(l,{mdxType:"Tabs"},Object(b.b)(i,{label:"OpenShift",mdxType:"Tab"},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Create Pod using yaml file ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc apply -f myapp-pod\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Get Current Pods in Project ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc get pods\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Get Pods with their IP and node location ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc get pods -o wide\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Get Pod’s Description ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc describe pod myapp-pod\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Get the logs  ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc logs myapp-pod\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Delete a Pod ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc delete pod myapp-pod\n"))),Object(b.b)(i,{label:"IKS",mdxType:"Tab"},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Create Pod using yaml file ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl apply -f myapp-pod\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Get Current Pods in Project ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl get pods\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Get Pods with their IP and node location ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc get pods -o wide\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Get Pod’s Description ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc describe pod myapp-pod\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Get the logs  ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc logs myapp-pod\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Delete a Pod ")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc delete pod myapp-pod\n")))),Object(b.b)("h1",null,"Projects/Namespaces"),Object(b.b)("p",null,"Namespaces are intended for use in environments with many users spread across multiple teams, or projects."),Object(b.b)("p",null,"Namespaces provide a scope for names. Names of resources need to be unique within a namespace, but not across namespaces."),Object(b.b)("p",null,"Namespaces are a way to divide cluster resources between multiple users (via resource quota)."),Object(b.b)("p",null,"It is not necessary to use multiple namespaces just to separate slightly different resources, such as different versions of the same software: use labels to distinguish resources within the same namespace. In practice namespaces are used to deploy different versions based on stages of the CICD pipeline (dev, test, stage, prod)"),Object(b.b)("h2",null,"Resources"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"OpenShift")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://docs.openshift.com/container-platform/4.3/applications/projects/working-with-projects.html"}),"Working With Projects")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://docs.openshift.com/container-platform/4.3/cli_reference/openshift_cli/getting-started-cli.html#creating-a-project"}),"Creating Projects")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://docs.openshift.com/container-platform/4.3/applications/projects/configuring-project-creation.html"}),"Configure Project Creation"))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"IKS")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",c({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"}),"Namespaces"))),Object(b.b)("h2",null,"References:"),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Namespace\nmetadata:\n  name: dev\n")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{className:"language-yaml"}),'apiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp-pod\n  namespace: dev\nspec:\n  containers:\n    - name: myapp-container\n      image: busybox\n      command: ["sh", "-c", "echo Hello Kubernetes! && sleep 3600"]\n')),Object(b.b)(l,{mdxType:"Tabs"},Object(b.b)(i,{label:"OpenShift",mdxType:"Tab"},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Getting all namespaces/projects")," "),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc projects\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Create a new Project")," "),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc new-project dev\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Viewing Current Project")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc project\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Setting Namespace in Context")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc project dev\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Viewing Project Status")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"oc status\n"))),Object(b.b)(i,{label:"IKS",mdxType:"Tab"},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Getting all namespaces")," "),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl get namespaces\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Create a new namespace called bar")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl create ns dev\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Setting Namespace in Context")),Object(b.b)("pre",null,Object(b.b)("code",c({parentName:"pre"},{}),"kubectl config set-context --current --namespace=dev\n")))))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-kubernetes-core-concepts-index-mdx-7b3b7e648a817ac514a0.js.map