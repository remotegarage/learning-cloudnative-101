(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{wAJq:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return l})),t.d(n,"default",(function(){return s}));t("91GP"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("q1tI");var a=t("7ljp"),o=t("013z");t("qKvR");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}var l={},i={_frontmatter:l},c=o.a;function s(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,["components"]);return Object(a.b)(c,r({},i,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",null,"Solution - sample-01"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Create the topics ",Object(a.b)("inlineCode",{parentName:"li"},"topic1")," and ",Object(a.b)("inlineCode",{parentName:"li"},"topic1.DLT")," in your IBM Event Streams on Cloud instance."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"git clone https://github.com/spring-projects/spring-kafka.git")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"cd spring-kafka/samples/sample-01")),Object(a.b)("li",{parentName:"ol"},"Include the necessary credentials in the ",Object(a.b)("inlineCode",{parentName:"li"},"src/main/resources/application.yml")," file by merging the existing contents with the structure below:",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),'spring:\nkafka:\n bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n ssl:\n   protocol: TLSv1.2\n properties:\n   sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="token" password="<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>";\n   sasl.mechanism: PLAIN\n   security.protocol: SASL_SSL\n'))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"mvn clean package")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"java -jar target/kafka-sample-01-2.4.4.RELEASE.jar")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"curl -X POST http://localhost:8080/send/foo/bar")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"curl -X POST http://localhost:8080/send/foo/fail"))),Object(a.b)("h2",null,"Solution - sample-02"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Create the topics ",Object(a.b)("inlineCode",{parentName:"li"},"foos")," and ",Object(a.b)("inlineCode",{parentName:"li"},"bars")," in your IBM Event Streams on Cloud instance."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"git clone https://github.com/spring-projects/spring-kafka.git")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"cd spring-kafka/samples/sample-02")),Object(a.b)("li",{parentName:"ol"},"Include the necessary credentials in the ",Object(a.b)("inlineCode",{parentName:"li"},"src/main/resources/application.yml")," file by merging the existing contents with the structure below:",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),'spring:\nkafka:\n bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n ssl:\n   protocol: TLSv1.2\n properties:\n   sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="token" password="<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>";\n   sasl.mechanism: PLAIN\n   security.protocol: SASL_SSL\n'))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"mvn clean package")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"java -jar target/kafka-sample-02-2.4.4.RELEASE.jar")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"curl -X POST http://localhost:8080/send/foo/bar")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"curl -X POST http://localhost:8080/send/bar/baz")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"curl -X POST http://localhost:8080/send/unknown/xxx"))),Object(a.b)("h2",null,"Solution - sample-03"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Create the topics ",Object(a.b)("inlineCode",{parentName:"li"},"topic2")," and ",Object(a.b)("inlineCode",{parentName:"li"},"topic3")," in your IBM Event Streams on Cloud instance."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"git clone https://github.com/spring-projects/spring-kafka.git")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"cd spring-kafka/samples/sample-03")),Object(a.b)("li",{parentName:"ol"},"Include the necessary credentials in the ",Object(a.b)("inlineCode",{parentName:"li"},"src/main/resources/application.yml")," file by merging the existing contents with the structure below:",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),'spring:\nkafka:\n bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n ssl:\n   protocol: TLSv1.2\n properties:\n   sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="token" password="<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>";\n   sasl.mechanism: PLAIN\n   security.protocol: SASL_SSL\n'))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"mvn clean package")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"java -jar target/kafka-sample-03-2.4.4.RELEASE.jar")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"curl -X POST http://localhost:8080/send/foos/a,b,c,d,e"))))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-eda-activities-labs-lab-2-solution-mdx-3d4a91d995875b083f9a.js.map